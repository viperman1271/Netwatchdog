cmake_minimum_required(VERSION 3.10)

project(NetWatchdog)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Include cppzmq submodule
set(CPPZMQ_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/extern/cppzmq)
if (NOT EXISTS ${CPPZMQ_INCLUDE_DIR}/zmq.hpp)
    message(FATAL_ERROR "cppzmq not found at ${CPPZMQ_INCLUDE_DIR}")
endif()

set(TOML11_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/extern/toml11)
if (NOT EXISTS ${TOML11_INCLUDE_DIR}/toml.hpp)
    message(FATAL_ERROR "toml11 not found at ${TOML11_INCLUDE_DIR}")
endif()

set(CLI11_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/extern/cli11/include)
if (NOT EXISTS ${CLI11_INCLUDE_DIR}/CLI/CLI.hpp)
    message(FATAL_ERROR "cli11 not found at ${CLI11_INCLUDE_DIR}")
endif()

include_directories(${CPPZMQ_INCLUDE_DIR})
include_directories(${TOML11_INCLUDE_DIR})
include_directories(${CLI11_INCLUDE_DIR})
include_directories(${CMAKE_SOURCE_DIR}/source/lib)
include_directories(${CMAKE_SOURCE_DIR}/source/client)
include_directories(${CMAKE_SOURCE_DIR}/source/server)

# Set the output directory for executables
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../bin)
foreach(configuration_type IN ITEMS Debug Release)
    foreach(architecture IN ITEMS x86_64 x86)
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${configuration_type} ${CMAKE_BINARY_DIR}/bin/${configuration_type}/${architecture})
    endforeach()
endforeach()

add_subdirectory(extern/mongo-c-driver)
add_subdirectory(extern/mongo-cxx-driver)

# mongo-c
set_target_properties(aggregation1 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(appending PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(basic-aggregation PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bcon-col-view PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bcon-speed PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson-check-depth PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson-metrics PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson_static PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson_shared PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson-to-json PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bson-validate PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk1 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk2 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk3 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk4 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk5 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk6 PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(bulk-collation PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(check PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(common-operations PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(creating PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(example-bulkwrite PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-client PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-collection-command PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-collection-watch PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-command-monitoring PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-command-with-opts PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-gridfs PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-gridfs-bucket PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-manage-collection-indexes PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-manage-search-indexes PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-scram PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-sdam-monitoring PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-session PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-start-at-optime PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-transaction PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(example-update PROPERTIES FOLDER "extern/mongo-c/example")
set_target_properties(fam PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(find-and-modify PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(format PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(format-lint PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(hello_mongoc PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(json-to-bson PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mcd_rpc PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc_shared PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc_static PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc-dump PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc-ping PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc-stat PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc-tail PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(mongoc-cxx-check PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(test-atlas-executor PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-awsauth PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-azurekms PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-gcpkms PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-libmongoc PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-libmongoc-lib PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-mongoc-cache PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(test-mongoc-gssapi PROPERTIES FOLDER "extern/mongo-c/test")
set_target_properties(utf8proc_obj PROPERTIES FOLDER "extern/mongo-c")
set_target_properties(zlib_obj PROPERTIES FOLDER "extern/mongo-c")

# mongo-cxx
set_target_properties(bsoncxx_shared PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(dist PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(distcheck PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(docs PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(docs_dir_current PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(doxygen-all PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(doxygen-current PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(doxygen-deploy PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(executing PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(generate-libbsoncxx_shared-pc PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(generate-libmongocxx_shared-pc PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(hugo PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(hugo_dir PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(hugo-deploy PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(mongocxx_shared PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(mongocxx_test_properties PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(mongocxx_test_properties_with_main PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(uninstall PROPERTIES FOLDER "extern/mongo-cxx")
set_target_properties(uninstall PROPERTIES FOLDER "extern/mongo-cxx")

# Common library
set(NETWATCHDOG_COMMON_SRC_DIR ${CMAKE_SOURCE_DIR}/source/common)
file(GLOB LIBNETWATCHDOG_SOURCES ${NETWATCHDOG_COMMON_SRC_DIR}/*.*)

# Client executable
set(NETWATCHDOGC_SRC_DIR ${CMAKE_SOURCE_DIR}/source/client)
add_executable(netwatchdogc ${NETWATCHDOGC_SRC_DIR}/main.cpp ${NETWATCHDOGC_SRC_DIR}/client.h ${NETWATCHDOGC_SRC_DIR}/client.cpp ${LIBNETWATCHDOG_SOURCES})
target_link_libraries(netwatchdogc)
target_compile_definitions(netwatchdogc PRIVATE NETWATCHDOG_CLIENT)

# Server executable
set(NETWATCHDOGD_SRC_DIR ${CMAKE_SOURCE_DIR}/source/server)
include_directories(${NETWATCHDOGD_SRC_DIR} ${NETWATCHDOG_COMMON_SRC_DIR})
file(GLOB NETWATCHDOGD_SOURCES ${NETWATCHDOGD_SRC_DIR}/*.*)
file(GLOB NETWATCHDOGD_DATABASE_SOURCES ${NETWATCHDOGD_SRC_DIR}/database/*.*)
add_executable(netwatchdogd ${NETWATCHDOGD_SOURCES} ${NETWATCHDOGD_DATABASE_SOURCES} ${LIBNETWATCHDOG_SOURCES})
target_link_libraries(netwatchdogd ${ZeroMQ_LIBRARIES} bson_static mongoc_static bsoncxx_shared mongocxx_shared)
target_compile_definitions(netwatchdogd PRIVATE NETWATCHDOG_SERVER)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set_target_properties(netwatchdogc PROPERTIES FOLDER "NetWatchdog")
set_target_properties(netwatchdogd PROPERTIES FOLDER "NetWatchdog")